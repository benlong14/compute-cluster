apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "cockroach.fullname" . }}-budget
  labels:
    {{- include "cockroach.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cockroach.selectorLabels" . | nindent 6 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cockroach.fullname" . }}
  labels:
    {{- include "cockroach.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "cockroach.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cockroach.selectorLabels" . | nindent 6 }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 16Gi
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cockroach.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cockroach.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: udp
              containerPort: 41534
            - name: http
              containerPort: {{ .Values.service.private.http.port }}
            - name: grpc
              containerPort: {{ .Values.service.private.grpc.port }}
          livenessProbe:
            httpGet:
              path: "/health"
              port: {{ .Values.service.public.http.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: "/health?ready=1"
              port: {{ .Values.service.public.http.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 2
          volumeMounts:
          - name: datadir
            mountPath: /cockroach/cockroach-data
          env:
          - name: COCKROACH_CHANNEL
            value: kubernetes-insecure
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                resource: limits.cpu
                divisor: "1"
          - name: MEMORY_LIMIT_MIB
            valueFrom:
              resourceFieldRef:
                resource: limits.memory
                divisor: "1Mi"
          command:
          - "/bin/bash"
          - "-ecx"
          - exec
            /cockroach/cockroach
            start
            --logtostderr
            --insecure
            --advertise-host $(hostname -f)
            --http-addr 0.0.0.0
            --join cockroachdb-0.cockroachdb,cockroachdb-1.cockroachdb,cockroachdb-2.cockroachdb
            --cache $(expr $MEMORY_LIMIT_MIB / 4)MIB
            --max-sql-memory $(expr $MEMORY_LIMIT_MIB / 4)MiB
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      terminationGracePeriodSeconds: 60
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
