apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scrutiny.fullname" . }}
  labels:
    {{- include "scrutiny.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "scrutiny.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scrutiny.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "scrutiny.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}--init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: client-certs
              mountPath: /certs/
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: scrutiny.settings.prod
          command:
            - python
            - manage.py
            - migrate
            - --settings=scrutiny.settings.prod
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: client-certs
              mountPath: /certs/
          command:
            - python
            - manage.py
            - waitress
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: scrutiny.settings.prod
            - name: OTEL_PYTHON_DJANGO_INSTRUMENT
              value: "True"
            - name: OTEL_TRACES_SAMPLER
              value: parentbased_traceidratio
            - name: OTEL_TRACES_SAMPLER_ARG
              value: "0.1"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: client-certs
          projected:
            sources:
              - secret:
                  name: cockroachdb-node
                  items:
                    - key: ca.crt
                      path: ca.crt
              - secret:
                  name: cockroachdb-root
                  items:
                    - key: tls.crt
                      path: client.root.crt
                    - key: tls.key
                      path: client.root.key
            defaultMode: 256
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end}}
